apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: oasa-telemat
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
      - name: tmp-dir
        emptyDir: {}
      - name: keycloak-and-myswl-volume
      containers:
      - name: keycloak
        volumeMounts:
        - mountPath: /tmp
          name: tmp-dir
        - mountPath: /var/lib/mysql
          name: keycloak-and-myswl-volume
        image: quay.io/keycloak/keycloak:24.0
        command:
          - "/opt/keycloak/bin/kc.sh"
          - "start-dev"
        envFrom:
          - secretRef:
              name: keycloak-config-secrets
          # - name: KEYCLOAK_ADMIN
          #   value: "admin"
          # - name: KEYCLOAK_ADMIN_PASSWORD
          #   value: "adminpassword"
          # # - name: KC_HEALTH_ENABLED
          # #   value: "true"
          # # - name: KC_METRICS_ENABLED
          # #   value: "true"
          # - name: KC_HTTP_ENABLED
          #   value: "true"
          # - name: KC_HTTP_RELATIVE_PATH
          #   value: "/auth"
          # - name: KC_HOSTNAME_URL
          #   value: "https://oauth.opsw.gr/keycloak/auth/"
          # - name: KC_HOSTNAME_ADMIN_URL
          #   value: "https://oauth.opsw.gr/keycloak/auth/"
          # - name: KC_DB
          #   value: "mysql"
          #  - name: KC_DB_URL
          #    value: "jdbc:mysql-svc://mysql/keycloak"
          # - name: KC_DB_URL_HOST
          #   value: "mysql-svc"
          # - name: KC_DB_URL_PORT
          #   value: "3306"
          # - name: KC_DB_URL_DATABASE
          #   value: "keycloak"
          # - name: KC_DB_USERNAME
          #   value: "mysql-user"
          # - name: KC_DB_PASSWORD
          #   value: "YourPassword$@"
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /auth/realms/master
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
      initContainers:
        - name: wait-for-mysql-pod
          image: busybox:1.28
          args:
            - /bin/sh
            - -c
            - until telnet mysql-svc 3306; do echo waiting for mysql-service; sleep 2; done;
