apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: oasa-telemat
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
      - name: keycloak
        image: quay.io/keycloak/keycloak:latest
        args: ["start", "--cache-stack=kubernetes", "--https-certificate-file=/etc/certs/tls.crt", "--https-certificate-key-file=/etc/certs/tls.key"]
        env:
        - name: KEYCLOAK_ADMIN
          value: "admin"
        - name: KEYCLOAK_ADMIN_PASSWORD
          value: "adminpassword"
        - name: KC_PROXY
          value: "edge"
        - name: KC_HOSTNAME
          value: oauth.opsw.gr
        - name: KC_HOSTNAME_STRICT_HTTPS
          value: "true"
        - name: KC_DB
          value: mysql
        - name: KC_DB_URL_HOST
          value: mysql-svc
        - name: KC_DB_URL_PORT
          value: "3306"
        - name: KC_DB_URL_DATABASE
          value: keycloak
        - name: KC_DB_USERNAME
          value: "mysql-user"
        - name: KC_DB_PASSWORD
          value: "YourPassword$@"
        # - name: JGROUPS_DISCOVERY_PROTOCOL
        #   value: dns.DNS_PING
        # - name: JGROUPS_DISCOVERY_PROPERTIES
        #   value: dns_query=keycloak-headless.oasa-telemat.svc.cluster.local
        - name: KC_TRANSACTION_XA_ENABLED
          value: "true"
        - name: KC_HEALTH_ENABLED
          value: "true"
        - name: KC_METRICS_ENABLED
          value: "true"
        volumeMounts:
          - name: tls
            mountPath: "/etc/certs"
            readOnly: true
        ports:
        - name: http
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /auth/realms/master
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: tls
        secret:
          secretName: tls-secret-v2